name: 'Automated Versioning and Latest Tag Update'

on:
  push:
    branches:
      - main # Trigger on push to main branch

permissions:
  contents: write

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Get the current version
        id: get_version
        run: |
          # shellcheck disable=SC2086
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION)  # Read current version from the VERSION file
          else
            VERSION="1.0.0"  # Default version if VERSION file doesn't exist
          fi
          echo "Current version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT  # Use GITHUB_OUTPUT to set the output value

      - name: Increment version number
        id: increment_version
        run: |
          # shellcheck disable=SC2086
          # Increment version number (bump the patch version by 1)
          NEW_VERSION=$(echo "${{ steps.get_version.outputs.version }}" | awk -F. -v OFS=. '{$NF += 1 ; print}')
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT  # Use GITHUB_OUTPUT to set the new version

      - name: Update VERSION file and commit
        run: |
          echo "${{ steps.increment_version.outputs.new_version }}" > VERSION
          git add VERSION
          git commit -m "Bump version to ${{ steps.increment_version.outputs.new_version }}"
          git push origin main

      - name: Create and push new tag
        run: |
          git tag "v${{ steps.increment_version.outputs.new_version }}"
          git push origin "v${{ steps.increment_version.outputs.new_version }}"

      - name: Update v1 tag to point to the latest version
        run: |
          git tag -d v1 || true  # Delete old v1 tag if it exists
          git tag v1 "${{ github.sha }}"  # Create new v1 tag
          git push origin v1 --force  # Force push the updated v1 tag

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{ steps.increment_version.outputs.new_version }}'
          release_name: 'v${{ steps.increment_version.outputs.new_version }}'
          body:
            'Release notes for version v${{
            steps.increment_version.outputs.new_version }}'
          draft: false
          prerelease: false
